<?xml version="1.0"?>
<launch>

    <machine name="at_robot_server" address="192.168.0.102" user="agus" env-loader="/home/agus/Documents/Proyectos/hardware_interface/at_robot_server_ros_env.sh"/>
    <machine name="at_robot" address="192.168.0.100" user="pablo" env-loader="/home/pablo/Documents/hardware_ws/at_robot_ros_env.sh"/>

    <arg name="debug" default="false" />
    <arg unless="$(arg debug)" name="launch_prefix" value="" />
    <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />
    <arg name="robot_name" default="fs"/>


    <rosparam file="$(find fs_hardware_interface)/config/hardware.yaml" command="load"/>
    <rosparam file="$(find fs_hardware_interface)/config/controllers.yaml" command="load"/>
    <rosparam file="$(find fs_hardware_interface)/config/joint_limits.yaml" command="load"/>
    <rosparam file="$(find fs_hardware_interface)/config/joint_offsets.yaml" command="load"/>


    <arg name="model" default="$(find fs_hardware_interface)/urdf/new_fs_robot.urdf.xacro"/>
    <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)" />

    <node machine="at_robot" name="fs_hardware_interface" pkg="fs_hardware_interface" type="fs_hardware_interface_node"
          output="screen"  />

    <node machine="at_robot" name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" >
    </node>

    <node machine="at_robot" name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/"
          args="
            /fs/controller/state
            /fs/controller/position/JointSteerRight
            /fs/controller/diff_drive/
        "/>


    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find fs_hardware_interface)/config/nav_config_gan.rviz"/>

    <node name="front_steer" pkg="fs_hardware_interface" type="front_steer_akermann.py" output="screen" />

    <include file="$(find teleop_twist_joy)/launch/teleop_robot.launch">
    </include>

    <include file="$(find jetson_nano_csi_cam)/launch/jetson_csi_cam_rect_at_robot.launch">
        <arg name="sensor_id" value="0" />                       <!-- The sensor id of the camera -->
        <arg name="cam_name" value="csi_cam_0" /> <!-- The name of the camera (corrsponding to the camera info) -->
        <arg name="frame_id" value="camera" />    <!-- The TF frame ID. -->
        <arg name="sync_sink" value="true" />                    <!-- Synchronize the app sink. Setting this to false may resolve problems with sub-par framerates. -->
        <arg name="width" value="640" />                         <!-- Image Width to stream -->
        <arg name="height" value="360" />                        <!-- Image Height to stream -->
        <arg name="fps" value="20" />                            <!-- Desired framerate. True framerate may not reach this if set too high. -->
        <arg name="flip_method" value="2" />                     <!-- flip_method -->
        <arg name="load_camera_info" value="true" />             <!-- Load the camera info or not-->
    </include>

    <node name="image_decompress" pkg="image_transport" type="republish" args="compressed in:=/csi_cam_0/image_rect_color raw out:=/csi_cam_0/image_rect_color_decompressed" />

</launch>