<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="fs">

<!--    *Constants*    -->

<!-- These 2 values should always be modified in parallel with the ones in scripts/front_steer_akermann.py -->
<xacro:property name="axle_track" value="0.227" />
<xacro:property name="wheel_base" value="0.17" />

<xacro:property name="Chasis_mass" value="50" />
<xacro:property name="Wheel_mass" value="10" />
<xacro:property name="M_PI" value="3.1415926535897931" />

<!-- Camara focal length, in pixels. (This assumes square pixels) -->
<xacro:property name="Camera_pixel_focal_length" value="400" />
<xacro:property name="Camera_image_width" value="640" />
<xacro:property name="Camera_image_height" value="360" />
<xacro:property name="Camera_cx" value="320" />
<xacro:property name="Camera_cy" value="167" />
        <!--In degrees measured from vertical -->
<xacro:property name="Camera_angle" value="25" />
<!--Camera near and far cutoff -->
<xacro:property name="Camera_near_cut" value="0.05" />
<xacro:property name="Camera_far_cut" value="25" />

<xacro:property name="wheel_MU1" value="200.0" />
<xacro:property name="wheel_MU2" value="1.0" />

<!--    *Colours*   -->

<material name="grey">
    <color rgba="0.2 0.2 0.3 1"/>
</material>

<material name="blue">
    <color rgba="0 0 0.8 1"/>
</material>

<material name="white">
    <color rgba="1 1 1 1"/>
</material>

<material name="black">
    <color rgba="0 0 0 1"/>
</material>

<material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
</material>

<material name="red">
    <color rgba="0.9 0.2 0.2 1"/>
</material>


<!--    Base link (chassis) since Gazebo 9 this has no mass of its own, see dummy link -->

  <link name="base_link">
    <!-- <visual>
        <origin rpy="0 0 0" xyz="0.003 0.108 -0.045"/>
        <geometry>
            <mesh filename="package://fs_simulator/meshes/prototype_stl/FS_Chassis_mm.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="white"/>
    </visual> -->
    <collision>
        <origin rpy="0 0 0" xyz="0.003 0.16 0.05"/>
        <geometry>
            <box size="0.2 0.34 0.1"/>
        </geometry>
    </collision>
  </link>
  <!-- <gazebo reference="base_link">
      <sensor type="contact" name="lside_bump_link">
        <always_on>true</always_on>
        <update_rate>50</update_rate>
        <contact>
          <collision>base_link_collision</collision>
        </contact>
        <plugin name="lside_bumper_plugin" filename="libgazebo_ros_bumper.so">
          <bumperTopicName>/fs/bumper</bumperTopicName>
          <frameName>world</frameName>
        </plugin>
      </sensor>
  </gazebo> -->

<!-- Dummy node, inertia for base link (chasis+batterypack+Motors) -->

<joint name="dummy_joint" type="fixed">
  <axis xyz="0 0 0" />
  <origin xyz="0 0 0" rpy="0 0 0"/>
  <parent link="base_link"/>
  <child link="dummy_link"/>
</joint>

<link name="dummy_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.003 0.16 0.05"/>
      <mass value="${Chasis_mass}"/>
      <inertia ixx="${Chasis_mass*0.01}" ixy="0.0" ixz="0.0" iyy="${Chasis_mass*4.16e-3}" iyz="0.0" izz="${Chasis_mass*0.013}"/>
    </inertial>
</link>


<!--    *Rear Left Wheel*   -->

  <link name="rear_left_wheel">
    <visual>
      <origin rpy="0 1.57 0" xyz="-0.01 0 0"/>
        <geometry>
          <cylinder length="0.02" radius="0.045"/>
        </geometry>
        <material name="red"/>
      </visual>
      <collision>
        <origin rpy="0 1.57 0" xyz="-0.01 0 0"/>
        <geometry>
            <cylinder length="0.02" radius="0.045"/>
        </geometry>
      </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="-0.01 0 0"/>
      <mass value="${Wheel_mass}"/>
      <inertia ixx="${Wheel_mass*8e-4}" ixy="0.0" ixz="0.0" iyy="${Wheel_mass*4.3e-4}" iyz="0.0" izz="${Wheel_mass*4.3e-4}"/>
    </inertial>
  </link>

  <gazebo reference="rear_left_wheel">
      <mu1 value="${wheel_MU1}"/>
      <mu2 value="${wheel_MU2}"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <!-- <slip1>0.5</slip1>
      <min_depth value="0.1"/> -->
  </gazebo>

  <joint name="base_to_left_wheel" type="continuous">
    <limit effort="5000" velocity="10"/>
    <axis rpy="0 0 0" xyz="-1 0 0"/>
    <parent link="base_link"/>
    <child link="rear_left_wheel"/>
    <origin xyz="-0.105 0.040 0.01481" rpy="0 0 0" />
     <dynamics damping="0.3" friction="0.1"/>
  </joint>

  <transmission name="left_back_motor_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="left_back_motor_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="base_to_left_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>

  <!--    *Rear Right Wheel*   -->

  <link name="rear_right_wheel">
    <visual>
      <origin rpy="0 1.57 0" xyz="0.01 0 0"/>
        <geometry>
          <cylinder length="0.02" radius="0.045"/>
        </geometry>
        <material name="red"/>
      </visual>
      <collision>
        <origin rpy="0 1.57 0" xyz="0.01 0 0"/>
        <geometry>
          <cylinder length="0.02" radius="0.045"/>
        </geometry>
      </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0.01 0 0"/>
      <mass value="${Wheel_mass}"/>
      <inertia ixx="${Wheel_mass*8e-4}" ixy="0.0" ixz="0.0" iyy="${Wheel_mass*4.3e-4}" iyz="0.0" izz="${Wheel_mass*4.3e-4}"/>
    </inertial>
  </link>

  <gazebo reference="rear_right_wheel">
      <mu1 value="${wheel_MU1}"/>
      <mu2 value="${wheel_MU2}"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <!-- <slip1>0.5</slip1>
      <min_depth value="0.1"/> -->
  </gazebo>

  <joint name="base_to_right_wheel" type="continuous">
    <limit effort="5000" velocity="10"/>
    <axis rpy="0 0 0" xyz="-1 0 0"/>
    <parent link="base_link"/>
    <child link="rear_right_wheel"/>
    <origin xyz="0.105 0.040 0.01481" rpy="0 0 0" />
     <dynamics damping="0.3" friction="0.1"/>
  </joint>

  <transmission name="right_back_motor_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="right_back_motor_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="base_to_right_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>


<!--    Left Steer mechanism   -->

<link name="steer_left">
    <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
            <cylinder length="0.02" radius="0.002"/>
        </geometry>
        <material name="green"/>
    </visual>
    <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
            <cylinder length="0.02" radius="0.002"/>
        </geometry>
    </collision>
  <inertial>
    <mass value="1" />
    <inertia ixx="1e-4" ixy="0.0" ixz="0.0" iyy="1e-4" iyz="0.0" izz="1e-4"/>
</inertial>
</link>

<joint name="base_to_left_front_steer" type="revolute">
    <axis xyz="0 0 1"/>
    <parent link="base_link"/>
    <child link="steer_left"/>
    <origin  xyz="-0.0825 0.210 0.020" rpy="0 0 0" />
    <dynamics damping="0.7" friction="0.7"/>
    <limit effort="5000" lower="${-45*M_PI/180}" upper="${45*M_PI/180}" velocity="${M_PI*2*10}"/>
</joint>

<transmission name="left_front_steer_trans">
  <type>transmission_interface/SimpleTransmission</type>
  <actuator name="left_front_steer_motor">
    <mechanicalReduction>1</mechanicalReduction>
  </actuator>
  <joint name="base_to_left_front_steer">
    <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
  </joint>
</transmission>

<!--    Right Steer mechanism   -->

<link name="steer_right">
    <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
            <cylinder length="0.02" radius="0.002"/>
        </geometry>
        <material name="green"/>
    </visual>
    <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
            <cylinder length="0.02" radius="0.002"/>
        </geometry>
    </collision>
    <inertial>
      <mass value="1" />
      <inertia ixx="1e-4" ixy="0.0" ixz="0.0" iyy="1e-4" iyz="0.0" izz="1e-4"/>
  </inertial>
</link>

<joint name="base_to_right_front_steer" type="revolute">
    <axis xyz="0 0 1"/>
    <parent link="base_link"/>
    <child link="steer_right"/>
    <origin  xyz="0.0825 0.210 0.020" rpy="0 0 0" />
    <dynamics damping="0.7" friction="0.7"/>
    <limit effort="5000" lower="${-45*M_PI/180}" upper="${45*M_PI/180}" velocity="${M_PI*2*10}"/>
</joint>

<transmission name="right_front_steer_trans">
  <type>transmission_interface/SimpleTransmission</type>
  <actuator name="right_front_steer_motor">
    <mechanicalReduction>1</mechanicalReduction>
  </actuator>
  <joint name="base_to_right_front_steer">
    <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
  </joint>
</transmission>


<!--  *Front Left Wheel*   -->

<link name="left_front_wheel">
    <visual>
      <origin rpy="0 1.57 0" xyz="-0.01 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.045"/>
        </geometry>
        <material name="red"/>
    </visual>
    <collision>
        <origin rpy="0 1.57 0" xyz="-0.01 0 0"/>
        <geometry>
          <cylinder length="0.02" radius="0.045"/>
        </geometry>
      </collision>
  <inertial>
    <origin rpy="0 0 0" xyz="-0.01 0 0"/>
    <mass value="${Wheel_mass}"/>
    <inertia ixx="${Wheel_mass*8e-4}" ixy="0.0" ixz="0.0" iyy="${Wheel_mass*4.3e-4}" iyz="0.0" izz="${Wheel_mass*4.3e-4}"/>
  </inertial>
</link>

<gazebo reference="left_front_wheel">
    <mu1 value="${wheel_MU1}"/>
    <mu2 value="${wheel_MU2}"/>
    <kp value="10000000.0" />
    <kd value="1.0" />
    <!-- <slip1>0.5</slip1>
    <min_depth value="0.1"/> -->
</gazebo>

<joint name="base_to_left_front_wheel" type="continuous">
  <axis  effort="1000.0" rpy="0 0 0" xyz="-1 0 0"/>
  <parent link="steer_left"/>
  <child link="left_front_wheel"/>
  <origin xyz="-0.022 0 -0.006" rpy="0 0 0" />
   <dynamics damping="0.3" friction="0.1"/>
</joint>

<transmission name="left_front_wheel_trans">
  <type>transmission_interface/SimpleTransmission</type>
  <actuator name="left_front_wheel_motor">
    <mechanicalReduction>1</mechanicalReduction>
  </actuator>
  <joint name="base_to_left_front_wheel">
    <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
  </joint>
</transmission>

<!--  *Front Right Wheel*   -->

<link name="right_front_wheel">
    <visual>
      <origin rpy="0 1.57 0" xyz="0.01 0 0"/>
        <geometry>
          <cylinder length="0.02" radius="0.045"/>
        </geometry>
        <material name="red"/>
    </visual>
    <collision>
        <origin rpy="0 1.57 0" xyz="0.01 0 0"/>
        <geometry>
          <cylinder length="0.02" radius="0.045"/>
        </geometry>
      </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0.01 0 0"/>
      <mass value="${Wheel_mass}"/>
      <inertia ixx="${Wheel_mass*8e-4}" ixy="0.0" ixz="0.0" iyy="${Wheel_mass*4.3e-4}" iyz="0.0" izz="${Wheel_mass*4.3e-4}"/>
    </inertial>
  </link>
  
  <gazebo reference="right_front_wheel">
      <mu1 value="${wheel_MU1}"/>
      <mu2 value="${wheel_MU2}"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <!-- <slip1>0.5</slip1>
      <min_depth value="0.1"/> -->
  </gazebo>
  
  <joint name="base_to_right_front_wheel" type="continuous">
    <axis  effort="1000.0" rpy="0 0 0" xyz="-1 0 0"/>
    <parent link="steer_right"/>
    <child link="right_front_wheel"/>
    <origin xyz="0.022 0 -0.006" rpy="0 0 0" />
     <dynamics damping="0.3" friction="0.1"/>
  </joint>
  
  <transmission name="right_front_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="right_front_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="base_to_right_front_wheel">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
  </transmission>


<!--    *Sensors*  -->

<!--    Camera 2d  -->

<joint name="camera_joint" type="fixed">
  <origin xyz="0 0.2745 0.125" rpy="0 ${Camera_angle*M_PI/180} ${M_PI/2}" />
  <parent link="base_link"/>
  <child link="camera_link"/>
</joint>

<link name="camera_link">
    <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
            <mesh filename="package://fs_simulator/meshes/prototype_stl/camera_test.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="blue"/>
    </visual>

  <inertial>
    <mass value="1e-5" />
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
  </inertial>
</link>

  <gazebo reference="camera_link">
    <material>Gazebo/DarkGrey</material>
    <sensor type="camera" name="camera2d_1">
      <update_rate>10.0</update_rate>
      <camera name="head">
        <horizontal_fov> ${2*atan(0.5*Camera_image_width/Camera_pixel_focal_length)}</horizontal_fov>
        <image>
          <width>${Camera_image_width}</width>
          <height>${Camera_image_height}</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>${Camera_near_cut}</near>
          <far>${Camera_far_cut}</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.01653004441291028</stddev>
        </noise>
        <lens>
          <type>gnomonical</type>
          <intrinsics>
            <fx> ${Camera_pixel_focal_length} </fx>  <!-- X focal length in pixels -->
            <fy> ${Camera_pixel_focal_length} </fy>  <!-- Y focal length in pixels -->
            <cx> ${Camera_cx} </cx>  <!-- X principal point in pixels -->
            <cy> ${Camera_cy} </cy>  <!-- Y principal point in pixels -->
          </intrinsics>
        </lens>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>fs/c1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <!-- <hackBaseline>0.07</hackBaseline> -->
        <Cx>${Camera_cx}</Cx>
        <Cy>${Camera_cy}</Cy>
      </plugin>
    </sensor>
  </gazebo>


<!--    Camera 3d  -->
<joint name="camera3d_frame_joint" type="fixed">
  <origin xyz="0 0.2745 0.125" rpy="-${(M_PI/2)+(Camera_angle*M_PI/180)} 0 0"/>
  <parent link="base_link"/>
  <child link="camera3d_frame_link"/>
</joint>

<link name="camera3d_frame_link">
</link>

<joint name="camera3d_joint" type="fixed">
  <origin xyz="0 0.2745 0.125" rpy="0 ${Camera_angle*M_PI/180} ${M_PI/2}" />
  <parent link="base_link"/>
  <child link="camera3d_link"/>
</joint>

<link name="camera3d_link">
  <inertial>
    <mass value="1e-5" />
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
  </inertial>
</link>

  <gazebo reference="camera3d_link">
    <material>Gazebo/DarkGrey</material>
    <sensor type="depth" name="camera3d_1">
      <update_rate>10.0</update_rate>
      <camera name="head">
        <horizontal_fov> ${2*atan(0.5*Camera_image_width/Camera_pixel_focal_length)} </horizontal_fov>
        <image>
          <width>${Camera_image_width}</width>
          <height>${Camera_image_height}</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>${Camera_near_cut}</near>
          <far>${Camera_far_cut}</far>
        </clip>
        <lens>
          <type>gnomonical</type>
          <intrinsics>
            <fx> ${Camera_pixel_focal_length} </fx>  <!-- X focal length in pixels -->
            <fy> ${Camera_pixel_focal_length} </fy>  <!-- Y focal length in pixels -->
            <cx> ${Camera_cx} </cx>  <!-- X principal point in pixels -->
            <cy> ${Camera_cy} </cy>  <!-- Y principal point in pixels -->
          </intrinsics>
        </lens>
      </camera>
        <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
          <baseline>0.2</baseline>
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>camera_ir</cameraName>
          <imageTopicName>/camera/color/image_raw</imageTopicName>
          <cameraInfoTopicName>/camera/color/camera_info</cameraInfoTopicName>
          <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
          <depthImageCameraInfoTopicName>/camera/depth/camera_info</depthImageCameraInfoTopicName>
          <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
          <frameName>camera3d_frame_link</frameName>
          <pointCloudCutoff>${Camera_near_cut}</pointCloudCutoff>
          <pointCloudCutoffMax>${Camera_far_cut}</pointCloudCutoffMax>
          <hackBaseline>0</hackBaseline>
          <Cx>${Camera_cx}</Cx>
          <Cy>${Camera_cy}</Cy>
        </plugin>
    </sensor>
  </gazebo>


<!--    LiDar Hokuyo   -->

<joint name="hokuyo_joint" type="fixed">
  <axis xyz="0 1 0" />
  <origin xyz="0 0.300 0.045" rpy="0 0 1.5708" />
  <parent link="base_link"/>
  <child link="hokuyo_link"/>
</joint>

<link name="hokuyo_link">
    <!-- <visual>
        <origin rpy="0 0 -1.5708" xyz="0.084 -0.242 -0.098"/>
        <geometry>
            <mesh filename="package://fs_simulator/meshes/prototype_stl/RpLidar.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="blue"/>
    </visual> -->
    <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
</link>

  <gazebo reference="hokuyo_link">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>20</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01653004441291028</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/fs/laser/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>


<!--    IMU   -->

<joint name="IMU_joint" type="fixed">
  <axis xyz="1 0 0"/>
  <origin xyz="0 0 0"/>
  <parent link="base_link"/>
  <child link="IMU_link"/>
</joint>


<link name="IMU_link">
<inertial>
  <mass value="0.05"/>
  <origin rpy="0 0 0" xyz="0 0 0"/>
  <inertia ixx="0.00001" ixy="0" ixz="0" iyy="0.00001" iyz="0" izz="0.00001"/>
</inertial>
<visual>
  <origin rpy="0 0 0" xyz="0 0 0"/>
  <geometry>
    <box size="0.01 0.01 0.01"/>
  </geometry>
</visual>
<collision>
  <origin rpy="0 0 0" xyz="0 0 0"/>
  <geometry>
    <box size="0.01 0.01 0.01"/>
  </geometry>
</collision>
</link>


<gazebo>
  <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
    <alwaysOn>true</alwaysOn>
    <bodyName>IMU_link</bodyName>
    <topicName>fs/imu_data</topicName>
    <serviceName>imu_service</serviceName>
    <gaussianNoise>8.0e-03</gaussianNoise>
    <updateRate>50.0</updateRate>
  </plugin>
</gazebo>


<!--    Gazebo Plugin  -->

    <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>/</robotNamespace>
        <legacyModeNS>true</legacyModeNS>
      </plugin>
    </gazebo>
</robot>
